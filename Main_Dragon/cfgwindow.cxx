/* Prelude: *module*: header >>> */
/* <<< header ends. */
/*
** Generated by WorkShop Visual
*/
/*
**LIBS: -lXm -lXt -lX11
*/

#include <stdlib.h>
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <X11/Shell.h>
#include <X11/Xatom.h>
#include <Xm/RepType.h>
#include <Xm/Protocols.h>
#include <Xm/Xm.h>
#include <Xm/CascadeB.h>
#include <Xm/DialogS.h>
#include <Xm/Form.h>
#include <Xm/PushB.h>
#include <Xm/RowColumn.h>
#include <Xm/Separator.h>
#include <Xm/Label.h>

/* Prelude: *module*: mainModule >>> */
/* <<< mainModule ends. */
#include "XmGraph/Graph.h"
#include "XmGraph/Arc.h"
#include "Xfwf/Board.h"
#include "Xfwf/Common.h"
#include "Xfwf/Frame.h"
#include "Xfwf/Label.h"
#include "Xfwf/Slider2.h"

#include "dragon.h"
#include "graphwindow.h"
#include "FGnode.h"
#include "cfgwindow.h"

extern void PrintCFGraphWindow(Widget, XtPointer, XtPointer) ;

extern void OpenCFGraphHelp(Widget, XtPointer, XtPointer) ;
void CFGFlowgraphSliderScroll(Widget Slider, XtPointer, XfwfScrollInfo *calldata);
void CFGZoomINCB(Widget , XtPointer, XtPointer);
void CFGZoomOUTCB(Widget , XtPointer, XtPointer);

Widget CFGraphShell = (Widget) NULL;
Widget CFGraphForm = (Widget) NULL;
Widget TopCFGraphMenuBar = (Widget) NULL;
Widget CFGraphMenuCascade = (Widget) NULL;
Widget CFGraphGraphMenu = (Widget) NULL;
Widget CFGraphMenuSeparator1 = (Widget) NULL;
Widget CFGGraphPrintButton = (Widget) NULL;
Widget CFGraphMenuSeparator2 = (Widget) NULL;
Widget CFGGraphCloseButton = (Widget) NULL;
Widget CFGraphMenuSeparator3 = (Widget) NULL;
Widget CFGraphHelpMenuCascade = (Widget) NULL;
Widget CFGraphHelpMenu = (Widget) NULL;
Widget CFGraphHelpMenuSeparator1 = (Widget) NULL;
Widget CFGraphHelpButton = (Widget) NULL;
Widget CFGraphHelpMenuSeparator2 = (Widget) NULL;
Widget CFGraphToolForm = (Widget) NULL;
Widget CFGraphToolTopSeparator = (Widget) NULL;
Widget CFGmainform = (Widget) NULL;
Widget CFGmenuseparator = (Widget) NULL;
Widget CFGFlowgraphLabel = (Widget) NULL;
Widget CFGFlowgraphSliderLabel = (Widget) NULL;
Widget CFGFlowgraphSlider = (Widget) NULL;
Widget CFGZoomOutButton = (Widget) NULL;
Widget CFGZoomInButton = (Widget) NULL;
Widget CFGToolLabel = (Widget) NULL;
//Widget Flowgraph = (Widget) NULL;
extern int FGZoom;


	/* Prelude: CFGraphShell: pre-create >>> */
void create_CFGraphShell (Widget parent, Position XPos, Position YPos)
	/* <<< pre-create ends. */
{
        FGwindowopen = True;
	Widget children[5];      /* Children to manage */
	Arg al[64];                    /* Arg List */
	register int ac = 0;           /* Arg Count */
	XtPointer tmp_value;             /* ditto */
        XmString xmstrings[16];
	/* Prelude: CFGraphShell: pre-manage >>> */
	/* <<< pre-manage ends. */
        FGZoom = 0;
        XfwfScrollInfo CFGFlowgraphSliderInfo;
	XtSetArg(al[ac], XmNallowShellResize, False); ac++;
        XtSetArg(al[ac], XmNheight, 600); ac++;
        XtSetArg(al[ac], XmNwidth,700); ac++;
        XtSetArg(al[ac], XmNx, XPos); ac++;
        XtSetArg(al[ac], XmNy, YPos); ac++;
	CFGraphShell = XtCreatePopupShell ( (char *) "CFGraphShell", topLevelShellWidgetClass, parent, al, ac );
         Atom WmDeleteWindow = XmInternAtom(XtDisplay(CFGraphShell),"WM_DELETE_WINDOW",False);
        XmAddWMProtocolCallback(CFGraphShell, WmDeleteWindow,CloseCFGraphWindow, NULL); 
	ac = 0;
	/* Prelude: CFGraphForm: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNautoUnmanage, FALSE); ac++;
        XtSetArg(al[ac], XmNheight, 600); ac++;
        XtSetArg(al[ac], XmNwidth,700); ac++;
        XtSetArg(al[ac], XmNx, XPos); ac++;
        XtSetArg(al[ac], XmNy, YPos); ac++;
	CFGraphForm = XmCreateForm ( CFGraphShell, (char *) "CFGraphForm", al, ac );
        

	ac = 0;
	/* Prelude: TopCFGraphMenuBar: pre-create >>> */
	/* <<< pre-create ends. */
	TopCFGraphMenuBar = XmCreateMenuBar ( CFGraphForm, (char *) "TopCFGraphMenuBar", al, ac );
	/* Prelude: CFGraphMenuCascade: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNalignment, XmALIGNMENT_CENTER); ac++;
	CFGraphMenuCascade = XmCreateCascadeButton ( TopCFGraphMenuBar, (char *) "CFGraphMenuCascade", al, ac );
	ac = 0;
	/* Prelude: CFGraphGraphMenu: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNentryBorder, 0); ac++;
	XtSetArg(al[ac], XmNpacking, XmPACK_COLUMN); ac++;
	CFGraphGraphMenu = XmCreatePulldownMenu ( TopCFGraphMenuBar, (char *) "CFGraphGraphMenu", al, ac );
	ac = 0;
	/* Prelude: CFGraphMenuSeparator1: pre-create >>> */
	/* <<< pre-create ends. */
        XtSetArg(al[ac], XmNseparatorType,  XmSINGLE_DASHED_LINE); ac++;
	CFGraphMenuSeparator1 = XmCreateSeparator ( CFGraphGraphMenu, (char *) "CFGraphMenuSeparator1)", al, ac );
	/* Prelude: CFGGraphPrintButton: pre-create >>> */
	/* <<< pre-create ends. */
	CFGGraphPrintButton = XmCreatePushButton ( CFGraphGraphMenu, (char *) "CFGraphPrintButton", al, ac );
	/* Prelude: CFGraphMenuSeparator2: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNseparatorType, XmSHADOW_ETCHED_OUT); ac++;
	CFGraphMenuSeparator2 = XmCreateSeparator ( CFGraphGraphMenu, (char *) "CFGraphMenuSeparator2", al, ac );
	ac = 0;
	/* Prelude: CFGGraphCloseButton: pre-create >>> */
	/* <<< pre-create ends. */
	CFGGraphCloseButton = XmCreatePushButton ( CFGraphGraphMenu, (char *) "CFGraphCloseButton", al, ac );
	/* Prelude: CFGraphMenuSeparator3: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNseparatorType, XmSHADOW_ETCHED_OUT); ac++;
	CFGraphMenuSeparator3 = XmCreateSeparator ( CFGraphGraphMenu, (char *) "CFGraphMenuSeparator3", al, ac );
	ac = 0;
	/* Prelude: CFGraphHelpMenuCascade: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNalignment, XmALIGNMENT_CENTER); ac++;
	CFGraphHelpMenuCascade = XmCreateCascadeButton ( TopCFGraphMenuBar, (char *) "CFGraphHelpMenuCascade", al, ac );
	ac = 0;
	/* Prelude: CFGraphHelpMenu: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNentryBorder, 0); ac++;
	XtSetArg(al[ac], XmNpacking, XmPACK_COLUMN); ac++;
	CFGraphHelpMenu = XmCreatePulldownMenu ( TopCFGraphMenuBar, (char *) "CFGraphHelpMenu", al, ac );
	ac = 0;
	/* Prelude: CFGraphHelpMenuSeparator1: pre-create >>> */
	/* <<< pre-create ends. */
        XtSetArg(al[ac],XmNseparatorType, XmSINGLE_DASHED_LINE); ac++;
	CFGraphHelpMenuSeparator1 = XmCreateSeparator ( CFGraphHelpMenu, (char *) "CFGraphHelpMenuSeparator1", al, ac );
	/* Prelude: CFGraphHelpButton: pre-create >>> */
	/* <<< pre-create ends. */
	CFGraphHelpButton = XmCreatePushButton ( CFGraphHelpMenu, (char *) "CFGraphHelpButton", al, ac );
	/* Prelude: CFGraphHelpMenuSeparator2: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNseparatorType, XmSHADOW_ETCHED_OUT); ac++;
	CFGraphHelpMenuSeparator2 = XmCreateSeparator ( CFGraphHelpMenu, (char *) "CFGraphHelpMenuSeparator2", al, ac );
	ac = 0;
	/* Prelude: CFGraphToolForm: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNheight, 100); ac++;
	CFGraphToolForm = XmCreateForm ( CFGraphForm, (char *) "CFGraphToolForm", al, ac );
	ac = 0;
	/* Prelude: CFGraphToolTopSeparator: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNseparatorType, XmSINGLE_DASHED_LINE); ac++;
	CFGraphToolTopSeparator = XmCreateSeparator ( CFGraphToolForm, (char *) "CFGraphToolTopSeparator", al, ac );
	ac = 0;
	/* Prelude: CFGmainform: pre-create >>> */
	/* <<< pre-create ends. */
	CFGmainform = XmCreateForm ( CFGraphForm, (char *) "CFGmainform", al, ac );
	/* Prelude: CFGmenuseparator: pre-create >>> */
	/* <<< pre-create ends. */
	XtSetArg(al[ac], XmNseparatorType, XmSINGLE_DASHED_LINE); ac++;
	CFGmenuseparator = XmCreateSeparator ( CFGraphForm, (char *) "CFGmenuseparator", al, ac );
        	
        ac = 0;
          char templabel[100];
        strcpy(templabel,"Flowgraph : ");
        strcat(templabel,(const char*)UICallgraphRoot[ProcedureLoaded].GetName());
           



	xmstrings[0] = XmStringCreateLtoR (templabel, (XmStringCharSet)XmFONTLIST_DEFAULT_TAG );
	XtSetArg(al[ac], XmNlabelString, xmstrings[0]); ac++;
	CFGFlowgraphLabel = XmCreateLabel ( CFGraphForm, (char *) "CallgraphLabel", al, ac );
        XmStringFree ( xmstrings [ 0 ] );


        ac = 0;
       
     
        XtSetArg(al[ac], XmNorientation,XmHORIZONTAL); ac++;
        XtSetArg(al[ac], XmNautoLayoutMode, XmALWAYS); ac++;
        XtSetArg(al[ac], XmNtwinsVisible, TRUE); ac++;
        XtSetArg(al[ac], XmNeditable, True); ac++;
        Flowgraph = XmCreateScrolledGraph(CFGmainform,"Flowgraph", al, ac);

        /*  allow moving of nodes */
        XtAddCallback (Flowgraph,
    		     XmNnodeMovedCallback,
    		     (XtCallbackProc)MoveHandling,   NULL);
         /* avoid moving of arcs */
        XtAddCallback (Flowgraph,
    		     XmNarcMovedCallback,
    		     (XtCallbackProc)MoveHandling,    NULL);
    
         /*  avoid creation of new arcs or nodes */
        XtAddCallback (Flowgraph,
    		     XmNnewNodeCallback,
    		     (XtCallbackProc)AvoidNew,     NULL);
      
        XtAddCallback (Flowgraph,
    		     XmNnewArcCallback,
    		     (XtCallbackProc)AvoidNew,      NULL);
   
       
        XtAddCallback (Flowgraph,
    		     XmNselectNodeCallback,
    		     (XtCallbackProc)LoadStatement,  NULL);
        /*
        XtAddCallback(Flowgraph,
    		    XmNselectArcCallback,
    		    (XtCallbackProc)CallSiteInfo,NULL);
        */




	ac = 0;

        XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM);ac++;
        XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_FORM);ac++;
        XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM);ac++;
        XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM);ac++;
        XtSetValues (XtParent(XtParent(Flowgraph)), al,ac);



         ac = 0;
	//XmStringFree ( xmstrings [ 0 ] );
	xmstrings[0] = XmStringCreateLtoR ( "   Flowgraph Slider", (XmStringCharSet)XmFONTLIST_DEFAULT_TAG );
	XtSetArg(al[ac], XmNlabelString, xmstrings[0]); ac++;
        XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
        XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
        XtSetArg(al[ac], XmNrightAttachment, XmATTACH_NONE); ac++;
        XtSetArg(al[ac], XmNtopWidget, CFGraphToolTopSeparator); ac++;
	CFGFlowgraphSliderLabel = XmCreateLabel ( CFGraphToolForm, (char *) "CallgraphSliderLabel", al, ac );
        XtManageChild(CFGFlowgraphSliderLabel); 
        XmStringFree ( xmstrings [ 0 ] );


       ac= 0; 
        CFGFlowgraphSlider = XtVaCreateManagedWidget("FlowgraphSlider",
                                               xfwfSlider2WidgetClass,
                                               CFGraphToolForm,
                                               XmNbottomAttachment, XmATTACH_NONE,
                                               XmNrightAttachment, XmATTACH_NONE,
                                               XmNtopAttachment, XmATTACH_WIDGET,
					       XmNleftAttachment, XmATTACH_FORM,                                                                               XmNtopWidget, CFGFlowgraphSliderLabel,
					       XmNheight,70,
					       XmNwidth,150,
                                               NULL); 


       CFGFlowgraphSliderInfo.hsize = CFGFlowgraphSliderInfo.vsize = 0.6;
       XfwfResizeThumb_Interface(CFGFlowgraphSlider, CFGFlowgraphSliderInfo.hsize, CFGFlowgraphSliderInfo.vsize);
       XtAddCallback(CFGFlowgraphSlider,XtNscrollCallback, (XtCallbackProc)CFGFlowgraphSliderScroll, NULL);
       XtManageChild(CFGFlowgraphSlider);
       ac = 0;
       xmstrings[0] = XmStringCreateLtoR ( "  Zoom Controls", (XmStringCharSet)XmFONTLIST_DEFAULT_TAG );
	XtSetArg(al[ac], XmNlabelString, xmstrings[0]); ac++;
         XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_WIDGET); ac++;
        XtSetArg(al[ac], XmNrightAttachment, XmATTACH_NONE); ac++;
        XtSetArg(al[ac], XmNleftWidget, CFGFlowgraphSlider); ac++;
        XtSetArg(al[ac], XmNtopWidget, CFGraphToolTopSeparator); ac++;
	CFGToolLabel = XmCreateLabel ( CFGraphToolForm, (char *) "CFGToolLabel", al, ac );
        XtManageChild(CFGToolLabel);  
        XmStringFree(xmstrings[0]);



        ac = 0;
        xmstrings[0] = XmStringCreateLtoR ( "    Zoom Out    ", (XmStringCharSet)XmFONTLIST_DEFAULT_TAG );
	XtSetArg(al[ac], XmNlabelString, xmstrings[0]); ac++;
        XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_WIDGET); ac++;
	//	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
 
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_NONE); ac++;
        XtSetArg(al[ac], XmNleftWidget, CFGFlowgraphSlider); ac++;
        XtSetArg(al[ac], XmNtopWidget,CFGToolLabel ); ac++;
        CFGZoomOutButton  = XmCreatePushButton ( CFGraphToolForm , (char *) "ZoomOutButton", al, ac );
	XtAddCallback( CFGZoomOutButton, XmNactivateCallback, CFGZoomINCB, (XtPointer) 0 );  
	XtManageChild(CFGZoomOutButton);
        XmStringFree(xmstrings[0]);


        ac = 0;
        xmstrings[0] = XmStringCreateLtoR ( "    Zoom In     ", (XmStringCharSet)XmFONTLIST_DEFAULT_TAG );
	XtSetArg(al[ac], XmNlabelString, xmstrings[0]); ac++;
        XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_WIDGET); ac++;
	//	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
 
	
        XtSetArg(al[ac], XmNtopWidget, CFGZoomOutButton); ac++;
        XtSetArg(al[ac], XmNleftWidget, CFGFlowgraphSlider); ac++;
        CFGZoomInButton  = XmCreatePushButton ( CFGraphToolForm , (char *) "ZoomInButton", al, ac );
	XtAddCallback( CFGZoomInButton, XmNactivateCallback, CFGZoomOUTCB, (XtPointer) 0 );  
	XtManageChild(CFGZoomInButton);
        XmStringFree(xmstrings[0]);


ac = 0;


	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( TopCFGraphMenuBar,al, ac );
	ac = 0;

	XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( CFGraphToolForm,al, ac );
	ac = 0;

	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNtopWidget, CFGFlowgraphLabel); ac++;
        //XtSetArg(al[ac], XmNtopWidget, CFGmenuseparator); ac++;
	XtSetArg(al[ac], XmNbottomAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNbottomWidget, CFGraphToolForm); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( CFGmainform,al, ac );
	ac = 0;

	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNtopWidget, TopCFGraphMenuBar); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( CFGmenuseparator,al, ac );

        ac = 0;
        XtSetArg(al[ac], XmNtopAttachment, XmATTACH_WIDGET); ac++;
	XtSetArg(al[ac], XmNtopWidget, CFGmenuseparator); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues (CFGFlowgraphLabel ,al, ac );
        
	ac = 0;
	/* Prelude: CFGraphForm: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: TopCFGraphMenuBar: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphMenuCascade: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphGraphMenu: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphMenuSeparator1: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGGraphPrintButton: pre-manage >>> */
	/* <<< pre-manage ends. */
	if (CFGGraphPrintButton)
		XtAddCallback( CFGGraphPrintButton, XmNactivateCallback, PrintCFGraphWindow, (XtPointer) 0 );
	/* Prelude: CFGraphMenuSeparator2: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGGraphCloseButton: pre-manage >>> */
	/* <<< pre-manage ends. */
	if (CFGGraphCloseButton)
		XtAddCallback( CFGGraphCloseButton, XmNactivateCallback, CloseCFGraphWindow, (XtPointer) 0 );
	/* Prelude: CFGraphMenuSeparator3: pre-manage >>> */
	/* <<< pre-manage ends. */
	if ((children[ac] = CFGraphMenuSeparator1) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGGraphPrintButton) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGraphMenuSeparator2) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGGraphCloseButton) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGraphMenuSeparator3) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;
	XtSetArg(al[ac], XmNsubMenuId, CFGraphGraphMenu); ac++;
	XtSetValues(CFGraphMenuCascade, al, ac );
	ac = 0;
	/* Prelude: CFGraphHelpMenuCascade: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphHelpMenu: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphHelpMenuSeparator1: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphHelpButton: pre-manage >>> */
	/* <<< pre-manage ends. */
	if (CFGraphHelpButton)
		XtAddCallback( CFGraphHelpButton, XmNactivateCallback, OpenCFGraphHelp, (XtPointer) 0 );
	/* Prelude: CFGraphHelpMenuSeparator2: pre-manage >>> */
	/* <<< pre-manage ends. */
	if ((children[ac] = CFGraphHelpMenuSeparator1) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGraphHelpButton) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGraphHelpMenuSeparator2) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;
	XtSetArg(al[ac], XmNsubMenuId, CFGraphHelpMenu); ac++;
	XtSetValues(CFGraphHelpMenuCascade, al, ac );
	ac = 0;
	if ((children[ac] = CFGraphMenuCascade) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGraphHelpMenuCascade) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;

	XtSetArg(al[ac], XmNtopAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNleftAttachment, XmATTACH_FORM); ac++;
	XtSetArg(al[ac], XmNrightAttachment, XmATTACH_FORM); ac++;
	XtSetValues ( CFGraphToolTopSeparator,al, ac );
	ac = 0;
	/* Prelude: CFGraphToolForm: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGraphToolTopSeparator: pre-manage >>> */
	/* <<< pre-manage ends. */
	if ((children[ac] = CFGraphToolTopSeparator) != (Widget) 0) { ac++; }
	if (ac > 0) { XtManageChildren(children, ac); }
	ac = 0;
	/* Prelude: CFGmainform: pre-manage >>> */
	/* <<< pre-manage ends. */
	/* Prelude: CFGmenuseparator: pre-manage >>> */
	/* <<< pre-manage ends. */


        
	if ((children[ac] = TopCFGraphMenuBar) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGraphToolForm) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGmainform) != (Widget) 0) { ac++; }
	if ((children[ac] = CFGmenuseparator) != (Widget) 0) { ac++; }
        if ((children[ac] = CFGFlowgraphLabel) != (Widget) 0) { ac++; }
	if (ac > 0) { CreateFlowgraph(ProcedureLoaded);
                      XtManageChildren(children, ac); }
	ac = 0;
        if (Flowgraph != (Widget) 0) {XtManageChild (Flowgraph); }
	if (CFGraphForm != (Widget) 0) { XtManageChild ( CFGraphForm); }
        if (CFGraphShell != (Widget) 0) {XtManageChild ( CFGraphShell); } 
       
  
	if(cfg.GetSizeofFGnodes()>0){
       XmGraphCenterAroundWidget(Flowgraph,cfg.FG_Nodes[0].GetUINode());
       XmGraphSelectNode(Flowgraph,cfg.FG_Nodes[0].GetUINode());
	}          
          
}


extern void CloseCFGraphWindow(Widget, XtPointer, XtPointer) 
{
   UnHighlightText();
  FGwindowopen = False;  
  XtUnmanageChild(CFGraphShell);


}

void CFGFlowgraphSliderScroll(Widget Slider, XtPointer, XfwfScrollInfo *calldata)
{
  SliderScroll(Slider,Flowgraph,calldata);

}


void CFGZoomINCB(Widget , XtPointer, XtPointer)
{
  if(FGZoom<2) { 
  XmGraphZoom(Flowgraph , .5); 
  FGZoom++;
  }

}
void CFGZoomOUTCB(Widget , XtPointer, XtPointer)
{
  if(FGZoom>-2){
   XmGraphZoom(Flowgraph , -.5); 
   FGZoom--;
  }
}






